$$ npm init

$$ npm i mongoose express ejs express-ejs-layouts

$$ npm i --save-dev nodemon

$$ Make the scripts in the package.json file :
    "scripts": {
        "start": "node server.js",
        "devStart": "nodemon server.js"
    }

$$ Now in server.js:
    const express = require('express');
    const app = express();
    const expressLayouts = require('express-ejs-layouts');

    app.set('view engine', 'ejs');
    // create views folder
    app.set('views', __dirname + '/views');

    // hooking up express layouts: every single file will be put inside this layout file so we don't need to duplicate code for html template and header, footer, etc

    // create layouts folder inside views
    app.set('layout', 'layouts/layout');
    // telling that we will use express layouts
    app.use(expressLayouts);

    // telling where to get all the public files like the style sheets and stuff
    // create the public folder
    app.use(express.static('public'));

    // process.env.PORT is the port that the server will tell when we host it on it but for now in dev we can use 3000 hence that 'or'
    app.listen(process.env.PORT || 3000);

$$ to run : npm run devStart

>>> We will use MVC structure : routes/controllers, views(already created), models

$$ Set up index route - in index.js file in routes:
    const express = require('express');
    const router = - express.Router();

    router.get('/', (req, res) => {
        res.send('Hello world')
    })
    module.exports = router
include it in the server.js file:
    const indexRouter = require('./routes/index')
    .
    .
    // Index Route:
    app.use('/', indexRouter)


$$ Creating layout file and testing with index.ejs

layout file:
    <!-- Set up the basic template for before and after of every single page in our app -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Mybrary</title>
    </head>
    <body>
        Before
        <br>
        <%- body %>
        <br>
        After
    </body>
    </html>

index.ejs:
    Middle

index.js:
    const express = require('express')
    const router =  express.Router()

    router.get('/', (req, res) => {
        res.render('index')
    })

    module.exports = router

$$ Working with mongodb:
install mongoose
    npm i mongoose

$$ setup database connection in server.js
    ## to get the environment variables in our code, we will install a library called dotenv : npm i --save-dev dotenv

    # create a .env file to save all the env variables and add
    DATABASE_URL=mongodb://localhost/mybrary 
    to it
    don't forget to require it in server.js as:
        if (process.env.NODE_ENV !== 'production'){
            require('dotenv').config()
        }

In server.js set up the connection as:
    const mongoose = require('mongoose')
    mongoose.connect(process.env.DATABASE_URL, { useNewUrlParser: true})
    const db = mongoose.connection
    db.on('error', (error)=>console.log('ERROR: ', error))
    db.once('open', () => console.log('Database Connected'))

